angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget",["de.cismet.crisma.widgets.scenarioEvolutionWidget.directives","de.cismet.crisma.widgets.scenarioEvolutionWidget.controllers","de.cismet.cids.rest.collidngNames.Nodes","de.cismet.crisma.ICMM.Worldstates","de.cismet.cids.widgets.nodePathWidget"]).controller("AppCtrl",["$scope","de.cismet.crisma.ICMM.Worldstates",function(a,b){"use strict";a.selectedNode={},b.get({wsId:"58"},function(b){a.inputWorldstate=b})}]),angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget.controllers",[]),angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget.controllers").controller("de.cismet.crisma.widgets.scenarioEvolutionWidget.controllers.ScenarioEvolutionDirectiveController",["$scope","de.cismet.crisma.ICMM.Worldstates","de.cismet.collidingNameService.Nodes",function(a,b,c){"use strict";a.$watch("inputWorldstate",function(b,d){angular.equals(b,d)||c.get({nodeId:c.utils.getRequestIdForWorldstate(a.inputWorldstate)},function(b){a.inputNode=b})}),a.$watch("selectedNode",function(c,d){if(!angular.equals(c,d)){var e=a.selectedNode.objectKey;a.selectedWorldstate=b.get({wsId:e.substring(e.lastIndexOf("/")+1,e.length)})}})}]),angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget.directives",[]),angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget.directives").directive("scenarioEvolutionWidget",function(){"use strict";return{scope:{inputWorldstate:"=",selectedWorldstate:"="},restrict:"E",replace:!0,templateUrl:"templates/scenarioEvolutionWidgetTemplate.html",controller:"de.cismet.crisma.widgets.scenarioEvolutionWidget.controllers.ScenarioEvolutionDirectiveController"}}),angular.module("de.cismet.crisma.widgets.scenarioEvolutionWidget.directives").run(["$templateCache",function(a){"use strict";a.put("templates/scenarioEvolutionWidgetTemplate.html",'<span><cids-node-path-widget input-node=inputNode selected-node="selectedNode"></span>')}]);
//# sourceMappingURL=scenario-evolution-widget-angular.min.js.map